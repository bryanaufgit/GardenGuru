generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Plant {
  id        Int    @id @default(autoincrement())
  name      String
  latinName String
  light     String
  water     String
  image     String

  /// Intervall für Gießen (Tage)
  wateringInterval    Int @default(7)
  /// Intervall für Düngen (Tage)
  fertilizingInterval Int @default(30)
  /// Intervall für Umtopfen (Tage)
  repottingInterval   Int @default(365)

  owner   User?   @relation("OwnedPlants", fields: [ownerId], references: [id])
  ownerId String?

  wishlistedBy Wishlist[]
  reminders    Reminder[]

  ExpertTip ExpertTip[]
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  name      String?
  plants    Plant[]    @relation("OwnedPlants")
  wishlist  Wishlist[]
  reminders Reminder[]
  stats     Stat[]
}

model Wishlist {
  id      Int    @id @default(autoincrement())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  plant   Plant  @relation(fields: [plantId], references: [id])
  plantId Int
}

enum ReminderType {
  WATERING
  FERTILIZING
  REPOTTING
}

model Reminder {
  id        Int          @id @default(autoincrement())
  user      User         @relation(fields: [userId], references: [id])
  userId    String
  plant     Plant        @relation(fields: [plantId], references: [id])
  plantId   Int
  date      DateTime
  type      ReminderType @default(WATERING)
  completed Boolean      @default(false)
}

model Stat {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  totalPlants Int
  waterCount  Int
  updatedAt   DateTime @updatedAt
}

model ExpertTip {
  id       Int     @id @default(autoincrement())
  content  String
  category String?
  plant    Plant?  @relation(fields: [plantId], references: [id])
  plantId  Int?
}
